###############################################################################
# OpenVAS Vulnerability Test
# $Id: linux_anti_malware_consolodation.nasl 1.0 2019-01-18 18:37:44Z $
#
# Linux & MacOS Anti-Malware detection
#
# Authors:
# Stephen Penn <stephen.penn@xqcyber.com>
#
# Copyright:
# Copyright (c) 2019 XQ Digital Resilience Limited
# Text descriptions are largely excerpted from the referenced
# advisory, and are Copyright (c) the respective author(s)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# (or any later version), as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
###############################################################################

if (description)
{
  script_oid("1.3.6.1.4.1.25623.1.1.300029");
  script_version("$Revision: 1.1 $");
  script_name("Linux Anti-Malware detection");
  script_tag(name:"summary", value:"Find installed anti-malware on linux hosts.");

  script_category(ACT_GATHER_INFO);
  script_copyright("Copyright (C) 2019 XQ Digital Resilience Limited.");
  script_family("Compliance");
  script_dependencies("ssh_authorization.nasl");
  script_mandatory_keys("login/SSH/success");

  exit(0);
}

include("misc_func.inc");
include("ssh_func.inc");

if( get_kb_item( "global_settings/authenticated_scans_disabled" ) ) exit( 0 );

# Check if port for us is known
port = get_preference( "auth_port_ssh" );
if( ! port )
  port = get_kb_item( "Services/ssh" );
if( ! port )
  port = 22;

sock_g = ssh_login_or_reuse_connection();
if (! sock_g) {
  exit(1);
}
host_ip = get_host_ip();

cmd=string('e=echo;g=grep;n="/dev/null";p="ps aux";pn="[e]pagd [c]om.avast.daemon [a]vqmd [C]ylanceSvc [r]tvscand [s]mcd [s]ymcfgd [T]mccMac";an="Bitdefender Avast Avira Cylance Symantec Symantec-client Symantec-endpoint-protection TrendMicro";sop="[s]avscand [S]ophosScanD";son="Sophos-savscand Sophos"; while [ -n "$pn" ];do h1=$($e $pn | cut -d " " -f 1); pn=$($e $pn | cut -s -d " " -f 2-); h2=$($e $an | cut -d " " -f 1); an=$($e $an | cut -s -d " " -f 2-); [ "$($p|$g $h1)" ] && $e "$h2"; done; ([ -d /Applications/ClamXav.app/Contents/Resources/ScanningEngine/bin/ 2>$n ] || hash "clamscan" 2>$n) && [ -n "$($p|$g "[c]lamav" )" ] && $e "clamscan"; [ -d /opt/sophos-av 2>$n ] && while [ -n "$sop" ];do h1=$($e $sop | cut -d " " -f 1); sop=$($e "$sop" | cut -s -d " " -f 2-); h2=$($e $son | cut -d " " -f 1); son=$($e $son | cut -s -d " " -f 2-); [ -n "$($p|$g $h1 )" ] && $e "$h2"; done; [ -d /opt/COMODO ] && ( [ -n "$($p|$g [c]mgdaemon)" ] || [ -n "$($p|$g [c]mdagent)" ]) && $e "Comodo"; ( [ -d "/opt/McAfee/cma/" ] && [ -n "$($p|$g "[c]ma" )" ] ) && $e "McAffee";');


buf = ssh_cmd_exec( cmd: cmd );
ssh_close_connection();

if ( buf >< ""){
	log_message(port:port, data:"0");
	exit(0);
}

log_message( port:port, data:buf );

antiMalware = split( buf, sep:string("\n"), keep:FALSE );
foreach mal (antiMalware){
	if ( mal >< "Comodo" ){
		set_kb_item( name:"AV/COMODO", value:TRUE );
	}
	if ( mal >< "Sophos-savscand" ){
		set_kb_item( name:"AV/SOPHOS", value:TRUE );
	}
	if ( mal >< "Sophos" ){
		set_kb_item( name:"AV/SOPHOS", value:TRUE );
	}
	if ( mal >< "clamscan" ){
		set_kb_item( name:"AV/CLAMSCAN", value:TRUE );
	}
}
exit(0);
